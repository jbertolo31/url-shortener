apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'org.owasp.esapi:esapi:2.5.3.1:jakarta'
    implementation 'org.slf4j:jcl-over-slf4j:2.0.12'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'

    implementation 'io.micrometer:micrometer-registry-prometheus:1.12.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-api:2.3.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.squareup.okhttp3:okhttp:4.12.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
    testImplementation 'org.jsoup:jsoup:1.17.2'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/jasonbertolo/urlshortener/web/WebApplication.class",
            ])
        }))
    }
}
